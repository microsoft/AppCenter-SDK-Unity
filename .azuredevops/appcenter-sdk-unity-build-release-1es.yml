trigger:
- master
- develop
pr:
- master
- develop

variables: 
- name: EDITOR_URL_WIN
  value: 'https://download.unity3d.com/download_unity/61fce66342ad/Windows64EditorInstaller/UnitySetup64-2018.4.18f1.exe'
- name: IL2CPP_SUPPORT_URL
  value: 'https://download.unity3d.com/download_unity/61fce66342ad/TargetSupportInstaller/UnitySetup-UWP-IL2CPP-Support-for-Editor-2018.4.18f1.exe'
- name: NUGET_FEED_ID
  value: 'AppCenter'
- name: AZURE_STORAGE_ACCOUNT
  value: 'mobilecentersdkdev'

resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/develop
  - repository: 1ESPipelineTemplates
    type: git
    name: 1ESPipelineTemplates/1ESPipelineTemplates
    ref: refs/tags/release
name: ${{ replace(variables['Build.SourceBranchName'], '/', '-') }}_$(date:yyyyMMdd)$(rev:.r)
extends:
  ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
    template: v1/1ES.Official.PipelineTemplate.yml@1ESPipelineTemplates
  ${{ else }}:
    template: v1/1ES.Unofficial.PipelineTemplate.yml@1ESPipelineTemplates
  parameters:
    pool:
      name: 1ES-PT-Windows-2019
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling-BulkMigrated
    sdl:
      sourceAnalysisPool: 1ES-PT-Windows-2022
    stages:
    - stage: BuildAppCenterSDKUnity
      jobs:
      - job: sdkBuildJob
        displayName: BuildAppCenterSDKUnity
        cancelTimeoutInMinutes: 1
        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish Artifact: UnityPackages'
            path: 'output'
            artifactName: UnityPackages
        steps:
        - task: AzureKeyVault@2
          displayName: 'Download KeyValult Variables'
          inputs:
            azureSubscription: 'AC - Dev Infra & Build Pool'
            KeyVaultName: 'mobile-center-sdk'
            SecretsFilter: 'appcenter-sdk-unity-serial-number-windows,appcenter-sdk-unity-username,appcenter-sdk-unity-password,appcensk-appcenter-token,appcenter-sdk-blob-storage-access-secret'
            RunAsPreJob: false
        - task: PowerShell@2
          displayName: 'Install Unity'
          inputs:
            targetType: filePath
            filePath: ./build.ps1
            arguments: '-Target="Install-Unity-Windows" -Verbosity="Diagnostic"'
        - task: UseDotNet@2
          displayName: 'Use .Net Core sdk 3.0.100'
          inputs:
            version: 3.0.100
        - task: PowerShell@2
          displayName: 'Activate Unity'
          inputs:
            targetType: filePath
            filePath: ./build.ps1
            arguments: '-Target="RegisterUnity" -UnitySerialNumber="$(appcenter-sdk-unity-serial-number-windows)" -UnityUsername="$(appcenter-sdk-unity-username)" -UnityPassword="$(appcenter-sdk-unity-password)" -Verbosity="Diagnostic"'
        - script: |
            git submodule init
            git submodule update
          displayName: 'Fetch submodules'
        - script: |
            echo Removing unnecessary file to prevent Binskim failure. This file used for tests and not required for build.
            rm BreakpadSupport/breakpad-support/src/main/cpp/google-breakpad/src/tools/windows/dump_syms/testdata/dump_syms_regtest64.exe
          displayName: 'Remove dump_syms_regtest64.exe'
        - task: PowerShell@2
          displayName: 'Create Packages'
          inputs:
            targetType: filePath
            filePath: ./build.ps1
            arguments: '-Target="CreatePackages" -NuGetPassword="$(appcensk-appcenter-token)" -NuGetFeedId="$(NUGET_FEED_ID)" -StorageAuthParams="$(appcenter-sdk-blob-storage-access-secret)" -Verbosity="Diagnostic"'
            ignoreLASTEXITCODE: true
            pwsh: true
        - task: PowerShell@2
          displayName: 'Unregister Unity'
          inputs:
            targetType: filePath
            filePath: ./build.ps1
            arguments: '-Target="UnregisterUnity" -UnitySerialNumber="$(appcenter-sdk-unity-serial-number-windows)" -UnityUsername="$(appcenter-sdk-unity-username)" -UnityPassword="$(appcenter-sdk-unity-password)" -Verbosity="Diagnostic"'
          condition: always()
        - powershell: |
            $change_log_found = $False
            $change_log = Foreach ($line in Get-Content "CHANGELOG.md") {
                if ($change_log_found) {
                    if ($line -like "___") {
                        break
                    }
                    $line
                } elseif ($line -like "## Version*") {
                    $change_log_found = $True
                }
            }
            ($change_log | Out-String).Trim() | Set-Content "RELEASE.md"
          displayName: 'Generate RELEASE.MD'
        - powershell: |
            $input = Get-Content .\UnityPackageSpecs\AppCenter.unitypackagespec -Raw 
            $xml = [xml]$input
            $version =  ($xml.package | Where { $_.name -eq "AppCenter" }).version
            Write-Host $version
            Write-Host "##vso[task.setvariable variable=version]$version"
          displayName: 'Extract Version'
        - task: ExtractFiles@1
          displayName: 'Extract AppCenter for APIScan '
          inputs:
            archiveFilePatterns: 'output/AppCenter-*.unitypackage'
            destinationFolder: 'apiscan-folder/AppCenter/'
        - task: ExtractFiles@1
          displayName: 'Extract AppCenterAnalytics for APIScan'
          inputs:
            archiveFilePatterns: 'output/AppCenterAnalytics-*.unitypackage'
            destinationFolder: 'apiscan-folder/AppCenterAnalytics/'
        - task: ExtractFiles@1
          displayName: 'Extract AppCenterCrashes for APIScan'
          inputs:
            archiveFilePatterns: 'output/AppCenterCrashes-*.unitypackage'
            destinationFolder: 'apiscan-folder/AppCenterCrashes/'
        - task: ExtractFiles@1
          displayName: 'Extract AppCenterDistribute for APIScan'
          inputs:
            archiveFilePatterns: 'output/AppCenterDistribute-*.unitypackage'
            destinationFolder: 'apiscan-folder/AppCenterDistribute/'
        - task: securedevelopmentteam.vss-secure-development-tools.build-task-apiscan.APIScan@2
          displayName: 'Run APIScan'
          inputs:
            softwareFolder: 'apiscan-folder'
            softwareName: 'appcenter-sdk-unity'
            softwareVersionNum: Latest
            isLargeApp: false
            verbosityLevel: verbose